---
- debug: var=inventory_hostname

- name: Allow run sudo commands without password
  community.general.sudoers:
    name: admin_role
    state: present
    user: "{{ admin_user }}"
    commands: ALL

# - name: Print Distribution Info
#   debug:
#     msg: "{{ ansible_distribution }} {{ ansible_distribution_version }} ({{ ansible_architecture }})"

- name: Set hostname for cluster participants
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}.{{ domain }}"

- name: Add IP address of all hosts to all hosts
  ansible.builtin.lineinfile:
    dest: /etc/hosts
    regexp: '.*{{ item }}$'
    line: "{{ hostvars[item].ansible_host }} {{ item }}.{{ domain }}"
    state: present
  when: hostvars[item].ansible_host is defined
  with_items: "{{ groups.all }}"

- name: Disable swap for current session
  ansible.builtin.command: swapoff -a
  become: true

- name: Disable swap permanently, persist reboots
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
    replace: '#\1\2\3swap\4'
    backup: yes

- name: Set selinux to disabled state
  ansible.posix.selinux:
    state: disabled

- name: Add overlay and br_netfilter to containerd.conf
  ansible.builtin.lineinfile:
    path: /etc/modules-load.d/containerd.conf
    line: "{{ item }}"
    create: yes
  with_items:
    - overlay
    - br_netfilter

- name: Enable overlay module
  community.general.modprobe:
    name: overlay
    state: present

- name: Enable br_netfilter module
  community.general.modprobe:
    name: br_netfilter
    state: present

- name: Add overlay and br_netfilter to containerd.conf
  ansible.builtin.lineinfile:
    path: /etc/modules-load.d/containerd.conf
    line: "{{ item }}"
    create: yes
  with_items:
    - overlay
    - br_netfilter

- name: Add content to k8s.conf
  ansible.builtin.lineinfile:
    path: /etc/sysctl.d/k8s.conf
    line: "{{ item }}"
    create: yes
  with_items:
    - "net.bridge.bridge-nf-call-iptables   = 1"
    - "net.ipv4.ip_forward                  = 1"
    - "net.bridge.bridge-nf-call-ip6tables  = 1"
    - "net.bridge.bridge-nf-call-arptables = 1"
  notify: Reload sysctl

- name: Add Docker CE repository
  become: true
  ansible.builtin.command:
        cmd: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

- name: Install containerd.io
  ansible.builtin.dnf:
    name:
      - containerd.io
    state: present
    update_cache: yes

- name: writing default config containerd /etc/containerd/config.toml
  become: true
  ansible.builtin.shell: containerd config default > /etc/containerd/config.toml

- name: Enable SystemdCgroup
  ansible.builtin.replace:
    path: /etc/containerd/config.toml
    regexp: 'SystemdCgroup \= false'
    replace: 'SystemdCgroup = true'

- name: Restart containerd service
  ansible.builtin.systemd_service:
    name: containerd
    state: restarted

- name: Enable containerd
  ansible.builtin.systemd_service:
    name: containerd
    state: started
    enabled: true

- name: Kubernetes repo to yum repositories.
  ansible.builtin.template:
    src: kubernetes.repo.tmpl
    dest: /etc/yum.repos.d/kubernetes.repo

- name: Install all required kubernetes packages
  ansible.builtin.shell: yum install -y git kubelet kubeadm kubectl --disableexcludes=kubernetes

- name: Enable kubelet
  ansible.builtin.systemd_service:
    name: kubelet
    state: started
    enabled: true
