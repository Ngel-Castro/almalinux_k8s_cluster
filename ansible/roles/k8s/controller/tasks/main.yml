---
# - name: Enable control plane
#   become: true
#   ansible.builtin.shell: kubeadm init --control-plane-endpoint={{ inventory_hostname }}.{ {domain }}

- name: Enable TCP firewall for controll plane
  ansible.posix.firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
  loop:
    - 6443/tcp
    - 2379/tcp
    - 2380/tcp
    - 10250/tcp
    - 10251/tcp
    - 10252/tcp
    - 10257/tcp
    - 10259/tcp
    - 179/tcp
  notify: Reload firewall

- name: Enable UDP firewall for controll plane
  ansible.posix.firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
  loop:
    - 4789/udp
  notify: Reload firewall

- name: Check if the cluster has been initialized
  stat:
    path: "{{ ansible_env.HOME }}/initialized"
  register: initialized_file
  when: inventory_hostname == 'controller1'

- name: Initialize Kubernetes master
  command: kubeadm init --control-plane-endpoint={{ inventory_hostname }}.{{ domain }}
  register: kubeadm_init_output
  changed_when: kubeadm_init_output.stdout.find('Your Kubernetes control-plane has initialized successfully!') != -1
  when: inventory_hostname == 'controller1' and not initialized_file.stat.exists

- name: Create initialized flag file
  file:
    path: "{{ ansible_env.HOME }}/initialized"
    state: touch
  when: initialized_file.stat.exists is not defined or initialized_file.stat.exists == false

- name: Create joining token
  command: sudo kubeadm token create --print-join-command
  register: join_command
  when: inventory_hostname == 'controller1'

- name: Get cert key for controll planes
  command: sudo kubeadm init phase upload-certs --upload-certs
  register: cert_key
  when: inventory_hostname == 'controller1'

- name: Setting up Joining command for others
  ansible.builtin.set_fact:
    join_command: "{{ join_command.stdout }}"
    cert_key: "{{ cert_key.stdout_lines[-1] }}"
  when: inventory_hostname == 'controller1'


- name: Copy kube config to local machine
  fetch:
    src: "/etc/kubernetes/admin.conf"
    dest: "{{ playbook_dir }}/admin.conf"
    flat: yes
  when: inventory_hostname == 'controller1'
