---
# - name: Enable control plane
#   become: true
#   ansible.builtin.shell: kubeadm init --control-plane-endpoint={{ inventory_hostname }}.{ {domain }}

- name: Enable TCP firewall for controll plane
  ansible.posix.firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
  loop:
    - 6443/tcp
    - 2379/tcp
    - 2380/tcp
    - 10250/tcp
    - 10251/tcp
    - 10252/tcp
    - 10257/tcp
    - 10259/tcp
    - 179/tcp
  notify: Reload firewall

- name: Enable UDP firewall for controll plane
  ansible.posix.firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
  loop:
    - 4789/udp
  notify: Reload firewall

- name: Initialize Kubernetes master
  command: kubeadm init --control-plane-endpoint={{ inventory_hostname }}.{{ domain }}
  register: kubeadm_init_output
  changed_when: kubeadm_init_output.stdout.find('Your Kubernetes control-plane has initialized successfully!') != -1
  when: inventory_hostname == 'controller1'

- name: Save join
  ansible.builtin.set_fact:
    join_command: "{{ kubeadm_init_output.stdout_lines[-2:] }}"

- name: Copy kube config to local machine
  fetch:
    src: "/etc/kubernetes/admin.conf"
    dest: "{{ playbook_dir }}/admin.conf"
    flat: yes
  when: inventory_hostname == 'controller1'

- name: Join controller2 to the cluster
  command: "{{ hostvars[groups['controller'][0]]['join_command'] }}"